["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$same$macros","~:imports",null,"~:requires",["^ ","~$same.compare","^;","~$same.diff","^<","~$ish","~$same.ish","^>","^>"],"~:uses",["^ ","~$diff","^<","^=","^>","~$near-zero","^;"],"~:defs",["^ ","~$ish?",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","~$same","~:line",10,"~:column",7,"~:end-line",10,"~:end-column",11,"~:arglists",["~#list",["~$quote",["^M",[["~$expected","~$&","~$actuals"]]]]],"~:doc","Compare one or more values to an expected value, returning true if they are the same-ish.\n  The values can be numbers:\n  ```klipse\n  (let [two (Math/pow (Math/sqrt 2) 2)]\n    [(== 2 two) (ish? 2 two)])\n  ```\n  or data structures:\n  ```klipse\n  (ish? {:a 1 :b [1.99999999999999 3]}\n        {:a 1.00000000000001 :b [2 3.0]})\n  ```\n  you can also compare more than one value to the expected value:\n  ```klipse\n  (ish? 1 1.0 0.99999999999999 1.00000000000001 1)\n  ```","~:top-fn",["^ ","~:variadic",true,"~:max-fixed-arity",1,"~:method-params",[["^M",["^O","^P"]]],"^L",["^M",[["^O","~$&","^P"]]],"~:arglists-meta",["^M",[null]]]],"^7","~$same$macros/ish?","^S",true,"^F","same.cljc","^K",11,"^R",["^ ","^S",true,"^T",1,"^U",[["^M",["^O","^P"]]],"^L",["^M",[["^O","~$&","^P"]]],"^V",["^M",[null]]],"^U",[["^M",["^O","^P"]]],"~:protocol-impl",null,"^V",["^M",[null]],"^I",1,"^H",10,"^J",10,"^T",1,"~:fn-var",true,"^L",["^M",[["^O","~$&","^P"]]],"^Q","Compare one or more values to an expected value, returning true if they are the same-ish.\n  The values can be numbers:\n  ```klipse\n  (let [two (Math/pow (Math/sqrt 2) 2)]\n    [(== 2 two) (ish? 2 two)])\n  ```\n  or data structures:\n  ```klipse\n  (ish? {:a 1 :b [1.99999999999999 3]}\n        {:a 1.00000000000001 :b [2 3.0]})\n  ```\n  you can also compare more than one value to the expected value:\n  ```klipse\n  (ish? 1 1.0 0.99999999999999 1.00000000000001 1)\n  ```"],"~$zeroish?",["^ ","^D",null,"^E",["^ ","^F","^G","^H",30,"^I",7,"^J",30,"^K",15,"^L",["^M",["^N",["^M",[["~$val","~$&",["^ ","~:keys",["~$max-diff"],"~:or",["^ ","^11",1000]]]]]]],"^Q","Compare a numeric value to zero, returning true if close.\n  ```klipse\n  (zeroish? 0.0000000001\n            :max-diff 1e6)\n  ```","^R",["^ ","^S",true,"^T",1,"^U",[["^M",["^[",["^ ","^10",["^11"],"^12",["^ ","^11",1000]]]]],"^L",["^M",[["^[","~$&",["^ ","^10",["^11"],"^12",["^ ","^11",1000]]]]],"^V",["^M",[null]]]],"^7","~$same$macros/zeroish?","^S",true,"^F","same.cljc","^K",15,"^R",["^ ","^S",true,"^T",1,"^U",[["^M",["^[",["^ ","^10",["^11"],"^12",["^ ","^11",1000]]]]],"^L",["^M",[["^[","~$&",["^ ","^10",["^11"],"^12",["^ ","^11",1000]]]]],"^V",["^M",[null]]],"^U",[["^M",["^[",["^ ","^10",["^11"],"^12",["^ ","^11",1000]]]]],"^X",null,"^V",["^M",[null]],"^I",1,"^H",30,"^J",30,"^T",1,"^Y",true,"^L",["^M",[["^[","~$&",["^ ","^10",["^11"],"^12",["^ ","^11",1000]]]]],"^Q","Compare a numeric value to zero, returning true if close.\n  ```klipse\n  (zeroish? 0.0000000001\n            :max-diff 1e6)\n  ```"],"~$not-zeroish?",["^ ","^D",null,"^E",["^ ","^F","^G","^H",39,"^I",7,"^J",39,"^K",19,"^L",["^M",["^N",["^M",[["^[","~$&",["^ ","^10",["^11"],"^12",["^ ","^11",1000]]]]]]],"^Q","Compare a numeric value to zero, returning true if not close. Equivalent to `(not (zeroish? ...))`.\n  ```klipse\n  (not-zeroish? 3 :max-diff 1e6)\n  ```","^R",["^ ","^S",true,"^T",1,"^U",[["^M",["^[",["^ ","^10",["^11"],"^12",["^ ","^11",1000]]]]],"^L",["^M",[["^[","~$&",["^ ","^10",["^11"],"^12",["^ ","^11",1000]]]]],"^V",["^M",[null]]]],"^7","~$same$macros/not-zeroish?","^S",true,"^F","same.cljc","^K",19,"^R",["^ ","^S",true,"^T",1,"^U",[["^M",["^[",["^ ","^10",["^11"],"^12",["^ ","^11",1000]]]]],"^L",["^M",[["^[","~$&",["^ ","^10",["^11"],"^12",["^ ","^11",1000]]]]],"^V",["^M",[null]]],"^U",[["^M",["^[",["^ ","^10",["^11"],"^12",["^ ","^11",1000]]]]],"^X",null,"^V",["^M",[null]],"^I",1,"^H",39,"^J",39,"^T",1,"^Y",true,"^L",["^M",[["^[","~$&",["^ ","^10",["^11"],"^12",["^ ","^11",1000]]]]],"^Q","Compare a numeric value to zero, returning true if not close. Equivalent to `(not (zeroish? ...))`.\n  ```klipse\n  (not-zeroish? 3 :max-diff 1e6)\n  ```"],"~$set-comparator!",["^ ","^D",null,"^E",["^ ","^F","^G","^H",47,"^I",7,"^J",47,"^K",22,"^L",["^M",["^N",["^M",[["~$comparator"]]]]],"^Q","Set the default comparator.\n  ```klipse\n  (set-comparator! (compare-ulp 2.0 100))\n  (ish? 0.1 (-> 2 Math/sqrt (Math/pow 2) (- 1.9)))\n  ```"],"^7","~$same$macros/set-comparator!","^S",false,"^F","same.cljc","^K",22,"^U",["^M",[["^17"]]],"^X",null,"^V",["^M",[null,null]],"^I",1,"^H",47,"^J",47,"^T",1,"^Y",true,"^L",["^M",["^N",["^M",[["^17"]]]]],"^Q","Set the default comparator.\n  ```klipse\n  (set-comparator! (compare-ulp 2.0 100))\n  (ish? 0.1 (-> 2 Math/sqrt (Math/pow 2) (- 1.9)))\n  ```"],"~$with-comparator",["^ ","^D",null,"^E",["^ ","^F","^G","^K",26,"^R",["^ ","^S",true,"^T",3,"^U",[["^M",["~$&form","~$&env","^17","~$body"]]],"^L",["^M",[["^1:","^1;","^17","~$&","^1<"]]],"^V",["^M",[null]]],"^I",11,"^H",58,"~:macro",true,"^J",58,"^L",["^M",["^N",["^M",[["^17","~$&","^1<"]]]]],"^Q","Temporarily replace the default comparator.\n  ```klipse\n  (with-comparator (compare-ulp 100.0 1e9)\n    (ish? 1.0 0.9999999))\n  ```\n  ```klipse\n  (with-comparator ==\n    (ish? 1.0 0.9999999999999))\n  ```"],"^7","~$same$macros/with-comparator","^S",true,"^F","same.cljc","^K",26,"^R",["^ ","^S",true,"^T",3,"^U",[["^M",["^1:","^1;","^17","^1<"]]],"^L",["^M",[["^1:","^1;","^17","~$&","^1<"]]],"^V",["^M",[null]]],"^U",[["^M",["^1:","^1;","^17","^1<"]]],"^X",null,"^V",["^M",[null]],"^I",1,"^H",58,"^1=",true,"^J",58,"^T",3,"^Y",false,"^L",["^M",[["^1:","^1;","^17","~$&","^1<"]]],"^Q","Temporarily replace the default comparator.\n  ```klipse\n  (with-comparator (compare-ulp 100.0 1e9)\n    (ish? 1.0 0.9999999))\n  ```\n  ```klipse\n  (with-comparator ==\n    (ish? 1.0 0.9999999999999))\n  ```"]],"~:require-macros",["^ "],"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["~:max-diff","~$cljs.core/binding","~$same.ish/*comparator*"]],"~:order",["^1B","^1C","^1D"]],"^Q","Main public API namespace."]